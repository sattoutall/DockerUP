name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Déclenche le pipeline lors d'un push sur la branche principale
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    name: Construire et pousser une image Docker
    runs-on: ubuntu-latest # Exécute le job sur la dernière version d'Ubuntu
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Récupère le code source du dépôt

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17' # Installe Java 17
          distribution: 'temurin' # Utilise la distribution Temurin

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Build Docker image
        run: docker build -t diambarsene/api-backend-toure-mbonde:v01 .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: diambarsene/api-backend-toure-mbonde:v01

  deploy:
    name: Déployer sur un VPS
    needs: build-and-push # Exécute ce job uniquement après le job de build-and-push
    runs-on: ubuntu-latest # Exécute le job sur un runner Ubuntu
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Récupère le code source

      - name: S'assurer que le répertoire existe sur le VPS
        uses: appleboy/ssh-action@master # Se connecte en SSH au serveur du VPS
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: mkdir -p /docker-compose-files # Crée un répertoire pour stocker les fichiers Docker Compose

      - name: Transférer docker-compose sur le VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./docker-compose.yml"
          target: "/docker-compose-files/docker-compose.yml"

      - name: Déployer l'application sur le VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker pull diambarsene/api-backend-toure-mbonde:v01
            cd /docker-compose-files
            docker-compose -f docker-compose.yml down # Arrête les conteneurs existants
            docker-compose -f docker-compose.yml up -d # Redémarre les services en arrière-plan